version: '3.8'

services:
  # CrowdSafe AI Application
  crowdsafe-api:
    build: .
    container_name: crowdsafe-api
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://mongo:27017
      - DATABASE_NAME=crowdsafe_ai
      - VIDEO_SOURCE=0
      - CROWD_DENSITY_THRESHOLD=0.8
      - ALERT_COOLDOWN_SECONDS=30
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=INFO
    volumes:
      - /dev/video0:/dev/video0  # For webcam access
      - ./uploads:/app/uploads   # For file uploads
    devices:
      - /dev/video0:/dev/video0  # Camera device access
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - crowdsafe-network

  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: crowdsafe-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=crowdsafe123
      - MONGO_INITDB_DATABASE=crowdsafe_ai
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - crowdsafe-network

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: crowdsafe-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=crowdsafe123
      - ME_CONFIG_MONGODB_URL=mongodb://admin:crowdsafe123@mongo:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - crowdsafe-network
    profiles:
      - tools

volumes:
  mongo_data:
    driver: local

networks:
  crowdsafe-network:
    driver: bridge